//******* New Color Definitions *********//


//default
$default-light: white;
$default-light-dark: #707ca9;
$default-dark: #141935;

//primary
$primary-1-light: #1796ff;
$primary-1-dark: #0088ff;
$primary-1-deep: #0077db;

$primary-2-light: #7c4dff;
$primary-2-dark: #6532fd;
$primary-2-deep: #512ad8;

$primary-3-light: #25cadf;
$primary-3-dark: #00b8d4;
$primary-3-deep: #00a0b5;

$primary-4-light: #f1437e;
$primary-4-dark: #e21f66;
$primary-4-deep: #c1145a;

$primary-5-light: #ffd54f;
$primary-5-dark: #ffbe07;
$primary-5-deep: #fca800;

$primary-6-light: #00d38a;
$primary-6-dark: #00c566;
$primary-6-deep: #00a955;

//secondary
$secondary-1-light: #ff5252;
$secondary-1-dark: #e53935;
$secondary-1-deep: #d2362f;

$secondary-2-light: #ffa726;
$secondary-2-dark: #ff9100;
$secondary-2-deep: #e57505;

$secondary-3-light: #98d71e;
$secondary-3-dark: #72cd35;
$secondary-3-deep: #6cab19;

$secondary-4-light: #ffec17;
$secondary-4-dark: #f3df00;
$secondary-4-deep: #e0bf03;

$secondary-5-light: #00d2ce;
$secondary-5-dark: #00c6c2;
$secondary-5-deep: #28a0a9;

$secondary-6-light: #d536f9;
$secondary-6-dark: #b733f4;
$secondary-6-deep: #8c2de2;

$secondary-7-light: #3f76ff;
$secondary-7-dark: #1b68f6;
$secondary-7-deep: #0058f0;

$tertiary-1-light: #536eff;

//primary-new
$primary-pastel-1-light: #00e1ed;
$primary-pastel-1-dark: #0080ff;
$primary-pastel-1-deep: #0080ff;

$primary-pastel-2-light: #86a4ff;
$primary-pastel-2-dark: #7b6aff;
$primary-pastel-2-deep: #702fff;

$primary-pastel-3-light: #ff90e4; 
$primary-pastel-3-dark: #ff4bc2; 
$primary-pastel-3-deep: #ff009d; 

$primary-pastel-4-light: #a3ebe6;
$primary-pastel-4-dark: #54e0e4;
$primary-pastel-4-deep: #00d5e2;

$primary-pastel-5-light: #ffc58e;
$primary-pastel-5-dark: #ff939a;
$primary-pastel-5-deep: #ff5fa6;

$primary-pastel-6-light: #ceff9d; 
$primary-pastel-6-dark: #6beea9; 
$primary-pastel-6-deep: #00dbb7; 

//darks
$dark-10: #333957;
$dark-20: #202647; 
$dark-30: $default-dark; 
$dark-40: #0a0f2c; 
$dark-50: #04041e; 

//watermarks
$watermarkBlue: rgba($primary-1-light, 0.08);
$watermarkGray: rgba($default-light-dark, 0.1);


//by feature
// prettier-ignore
$features: 
    'model-vis' $primary-1-deep $primary-1-light '\e910', 
    'reporting' $primary-2-deep $primary-2-light '\e924',
    'trade-area' $primary-3-deep $primary-3-light '\e91f',
    'forecast' $primary-6-deep $primary-6-light '\e926',
    'heat-map' $secondary-6-deep $secondary-6-light '\e928',
    'correlation-dash' $secondary-7-deep $secondary-7-light '\e871',
    'revenue-layers' $primary-5-deep $primary-5-light '\e53b',
    'territory-mgmt' $primary-4-deep $primary-4-light '\e925';


//by industry
$industries: retail, restaurant, c-store, private-equity, grocery, education,
    healthcare, banking;

$industry-colors: (
    retail: (
        light: $primary-1-light,
        dark: $primary-1-dark,
        deep: $primary-1-deep,
        icon: '\f02c',
    ),
    restaurant: (
        light: $secondary-2-light,
        dark: $secondary-2-dark,
        deep: $secondary-2-deep,
        icon: '\e56c',
    ),
    c-store: (
        light: $primary-2-light,
        dark: $primary-2-dark,
        deep: $primary-2-deep,
        icon: '\e546',
    ),
    private-equity: (
        light: $primary-3-light,
        dark: $primary-3-dark,
        deep: $primary-3-deep,
        icon: '\e900',
    ),
    grocery: (
        light: $primary-5-light,
        dark: $primary-5-dark,
        deep: $primary-5-deep,
        icon: '\f07a',
    ),
    healthcare: (
        light: $primary-4-light,
        dark: $primary-4-dark,
        deep: $primary-4-deep,
        icon: '\f21e',
    ),
    education: (
        light: $secondary-6-light,
        dark: $secondary-6-dark,
        deep: $secondary-6-deep,
        icon: '\e54b',
    ),
    banking: (
        light: $secondary-3-light,
        dark: $secondary-3-dark,
        deep: $secondary-3-deep,
        icon: '\f155',
    ),
);

//multi-purpose getter for a map https://css-tricks.com/snippets/sass/deep-getset-maps/
@function map-deep-get($map, $keys...) {
    //@debug $keys;
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}

//******* Media Queries *********//

$break-small: 500px;
$break-med: 768px;
$break-large-tablet: 1024px;
$break-large: 1200px;
$break-xlarge: 1600px;

@mixin respond-to($media) {
    //these 2 max queries are only to be used to overwrite a property thats already defined for each min breakpoint, like .inner
    @if $media == max-phone {
        @media only screen and (max-width: 767px) {
            @content;
        }
    } @else if $media == max-tablet {
        @media only screen and (max-width: 1023px) {
            @content;
        }
    } @else if $media == small-tablet {
        @media only screen and (min-width: $break-small) {
            @content;
        }
    } @else if $media == tablet {
        @media only screen and (min-width: $break-med) {
            @content;
        }
    } @else if $media == large-tablet {
        @media only screen and (min-width: $break-large-tablet) {
            @content;
        }
    } @else if $media == screen {
        @media only screen and (min-width: $break-large) {
            @content;
        }
    } @else if $media == wide-screen {
        @media only screen and (min-width: $break-xlarge) {
            @content;
        }
    }
}

//******* Responsive font sizes *********//

@mixin font-size-75 {
    font-weight: 100;
    line-height: 1;
    @include respond-to(tablet) {
        font-size: 50px;
    }
    @include respond-to(screen) {
        font-size: 75px;
    }
    @include respond-to(wide-screen) {
        font-size: 85px;
    }
    @include regMargin();
}

@mixin font-size-60 {
    font-weight: 300;
    line-height: 1.3;
    @include respond-to(tablet) {
        font-weight: 100;
        font-size: 40px;
    }
    @include respond-to(screen) {
        font-size: 60px;
    }
    @include respond-to(wide-screen) {
        font-size: 70px;
    }
    @include regMargin();
}

@mixin font-size-55 {
    font-weight: 300;
    line-height: 1.3;
    @include respond-to(tablet) {
        font-weight: 100;
        font-size: 50px;
    }
    @include respond-to(screen) {
        font-size: 55px;
    }
    @include respond-to(wide-screen) {
        font-size: 60px;
    }
    @include regMargin();
}

@mixin font-size-50 {
    font-weight: 300;
    line-height: 1.4;
    @include respond-to(tablet) {
        font-weight: 100;
        font-size: 45px;
    }
    @include respond-to(screen) {
        font-size: 50px;
    }
    @include respond-to(wide-screen) {
        font-size: 55px;
    }
    @include regMargin();
}

@mixin font-size-45 {
    font-weight: 300;
    line-height: 1.4;
    @include respond-to(tablet) {
        font-weight: 100;
        font-size: 40px;
    }
    @include respond-to(screen) {
        font-size: 45px;
    }
    @include respond-to(wide-screen) {
        font-size: 50px;
    }
    @include regMargin();
}

@mixin font-size-42 {
    font-weight: 300;
    line-height: 1.4;
    @include respond-to(tablet) {
        font-weight: 100;
        font-size: 40px;
    }
    @include respond-to(screen) {
        font-size: 42px;
    }
    @include respond-to(wide-screen) {
        font-size: 45px;
    }
    @include regMargin();
}

@mixin font-size-34 {
    font-weight: 300;
    line-height: 1.4;
    @include respond-to(tablet) {
        font-size: 32px;
    }
    @include respond-to(screen) {
        font-size: 34px;
    }
    @include respond-to(wide-screen) {
        font-size: 38px;
    }
    @include regMargin();
}

@mixin font-size-28 {
    font-weight: 300;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 26px;
    }
    @include respond-to(screen) {
        font-size: 28px;
    }
    @include respond-to(wide-screen) {
        font-size: 30px;
    }
}

@mixin font-size-25 {
    font-weight: 300;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 22px;
    }
    @include respond-to(screen) {
        font-size: 25px;
    }
    @include respond-to(wide-screen) {
        font-size: 28px;
    }
}

@mixin font-size-23 {
    font-weight: 300;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 22px;
    }
    @include respond-to(screen) {
        font-size: 23px;
    }
    @include respond-to(wide-screen) {
        font-size: 26px;
    }
}

@mixin font-size-20 {
    font-weight: 300;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 18px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 20px;
    }
    @include respond-to(wide-screen) {
        font-size: 22px;
    }
}

@mixin font-size-18 {
    font-weight: 400;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 16px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 18px;
    }
    @include respond-to(wide-screen) {
        font-size: 20px;
    }
}

@mixin font-size-16 {
    font-weight: 400;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 15px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 16px;
    }
    @include respond-to(wide-screen) {
        font-size: 18px;
    }
}

@mixin font-size-15 {
    font-weight: 400;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 14px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 15px;
    }
    @include respond-to(wide-screen) {
        font-size: 16px;
    }
}

@mixin font-size-14 {
    font-weight: 400;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 13px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 14px;
    }
    @include respond-to(wide-screen) {
        font-size: 15px;
    }
}

@mixin font-size-13 {
    font-weight: 400;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 12px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 13px;
    }
    @include respond-to(wide-screen) {
        font-size: 14px;
    }
}

@mixin font-size-12 {
    font-weight: 400;
    line-height: 1.7;
    @include regMargin();
    @include respond-to(tablet) {
        font-size: 11px;
        @include lessMargin();
    }
    @include respond-to(screen) {
        font-size: 12px;
    }
    @include respond-to(wide-screen) {
        font-size: 13px;
    }
}

@mixin heading-caps {
    text-transform: uppercase;
    letter-spacing: 1px;
}

@mixin regMargin() {
    margin-top: 0;
    margin-bottom: 5vw;
    @include respond-to(tablet) {
        margin-bottom: 20px;
    }
    @include respond-to(screen) {
        margin-bottom: 25px;
    }
    @include respond-to(wide-screen) {
        margin-bottom: 30px;
    }
}

@mixin lessMargin() {
    margin-top: 0;
    margin-bottom: 5vw;
    @include respond-to(tablet) {
        margin-bottom: 20px;
    }
}

//new stuff

//sections only
@mixin sectionPadding() {
    padding: 20vw 0;
    @include respond-to(tablet) {
        padding: 130px 0;
    }
    @include respond-to(screen) {
        padding: 140px 0;
    }
    @include respond-to(wide-screen) {
        padding: 160px 0;
    }
}

//Half the  padding - these are to change sectionPadding() for areas that need it
@mixin innerPaddingTop() {
    @include respond-to(tablet) {
        padding-top: 50px;
    }
    @include respond-to(screen) {
        padding-top: 60px;
    }
    @include respond-to(wide-screen) {
        padding-top: 70px;
    }
}

@mixin innerPaddingBottom() {
    @include respond-to(tablet) {
        padding-bottom: 50px;
    }
    @include respond-to(screen) {
        padding-bottom: 60px;
    }
    @include respond-to(wide-screen) {
        padding-bottom: 70px;
    }
}

//space between elements inside a section
@mixin innerMargin() {
    margin: 10vw auto;
    @include respond-to(tablet) {
        margin: 80px auto;
    }
    @include respond-to(screen) {
        margin: 100px auto;
    }
    @include respond-to(wide-screen) {
        margin: 120px auto;
    }
}

//above sizes only top or bottom
@mixin innerMarginTop() {
    margin-top: 10vw;
    @include respond-to(tablet) {
        margin-top: 80px;
    }
    @include respond-to(screen) {
        margin-top: 100px;
    }
    @include respond-to(wide-screen) {
        margin-top: 120px;
    }
}

@mixin innerMarginBottom() {
    margin-bottom: 10vw;
    @include respond-to(tablet) {
        margin-bottom: 80px;
    }
    @include respond-to(screen) {
        margin-bottom: 100px;
    }
    @include respond-to(wide-screen) {
        margin-bottom: 120px;
    }
}

//end new stuff

//pads boxes
@mixin innerPadding() {
    padding: 10vw;
    @include respond-to(tablet) {
        padding: 60px;
    }
    @include respond-to(wide-screen) {
        padding: 80px;
    }
}

//round parent padding
@mixin roundParentShadow() {
    padding: 0 10px 15px 10px;
}

// @mixin sectionPadding() {
//   padding:15vw 0;
//   @include respond-to(tablet) {  padding:35px 0;}
//   @include respond-to(wide-screen) {  padding:40px 0;}
// }

@mixin negMargin() {
    margin-top: -4vw;
    @include respond-to(tablet) {
        margin-top: -20px;
    }
    @include respond-to(screen) {
        margin-top: -25px;
    }
    @include respond-to(wide-screen) {
        margin-top: -30px;
    }
}

@mixin footerMargin() {
    margin-top: 3vw;
    margin-bottom: 3vw;
    @include respond-to(tablet) {
        margin: 8px 0;
    }
    @include respond-to(screen) {
        margin: 10px 0;
    }
    @include respond-to(wide-screen) {
        margin: 15px 0;
    }
}

@mixin makeWaterMark($word, $color) {
    &:before {
        content: $word;
        color: $color;
    }
}

@mixin makeTextGradient($colorLeft, $colorRight) {
    background: linear-gradient(90deg, $colorLeft, $colorRight);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    display: inline-block;

    //if ie, don't show background
    @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
        background: none;
        color: $default-light;
    }
}

@mixin fadeLink($opacity) {
    opacity: $opacity;
    transition: opacity 0.2s ease;

    &:hover {
        opacity: 1;
    }
}

@mixin button-effects() {
    opacity: 0.85;
    //transform:translateY(0);
    transition: opacity 0.3s ease, transform 0.3s ease, box-shadow 0.3s ease,
        background 0.3s ease;

    &:hover {
        opacity: 1;
        transform: translateY(-2px);
        box-shadow: 0 4px 18px rgba(0, 0, 0, 0.2);
    }
}

//old one with sass:darker which doesn't look good
@mixin makeSzIcon($color, $content) {
    .a {
        background: rgba($color, 0.1);
        .b {
            background: rgba($color, 0.2);
            .c {
                background: linear-gradient(
                    45deg,
                    darken($color, 12%) 33%,
                    $color 65%
                );

                &:before {
                    content: $content;
                }
            }
        }
    }
}

//new one specifying a deep color
@mixin makeSzIcon2colors($colorDeep, $colorLight, $content) {
    .a {
        background: rgba($colorLight, 0.1);
        .b {
            background: rgba($colorLight, 0.2);
            .c {
                background: linear-gradient(
                    45deg,
                    $colorDeep 33%,
                    $colorLight 65%
                );
 
                &:before {
                    content: $content;
                }
            }
        }
    }
}

//new one with just a solid color, no gradient
@mixin makeSzIcon1color($color, $content) {
    .a {
        background: rgba($color, 0.1);
        .b {
            background: rgba($color, 0.2);
            .c {
                background: $color;

                &:before {
                    content: $content;
                }
            }
        }
    }
}



//stars like this https://codepen.io/saransh/pen/BKJun

// // n is number of stars required
// @function multiple-box-shadow ($n, $h) {
//   $value: '#{random(2000)}px #{random($h)}px #FFF';
//   @for $i from 2 through $n {
//     $value: '#{$value} , #{random(2000)}px #{random($h)}px #FFF'
//   }
//
//   box-shadow:unquote($value);
//
// //  @return unquote($value)
// }

@mixin multiple-box-shadow($n, $h, $o) {
    $value: '#{random(2000)}px #{random($h)}px #FFF';
    @for $i from 2 through $n {
        $value: '#{$value} , #{random(2000)}px #{random($h)}px rgba(255,255,255, #{$o})';
    }

    box-shadow: unquote($value);
}

//
// $shadows-small:  multiple-box-shadow(50, 500);
// $shadows-medium: multiple-box-shadow(20, 500);
// $shadows-big:    multiple-box-shadow(4, 500);

@mixin colorLink($color) {
    transition: color 0.2s ease;

    &:hover {
        color: $color;
    }
}


//just for fancy drop menu items that are too big
@mixin smallerIcon() {
    font-size: 13px !important;

    @include respond-to(tablet) {
        font-size: 15px !important;
    }

    @include respond-to(wide-screen) {
        font-size: 18px !important;
    }
}

/// Slightly lighten a color
/// @access public
/// @param {Color} $color - color to tint
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function tint($color, $percentage) {
    @return mix($default-light, $color, $percentage);
}

/// Slightly darken a color
/// @access public
/// @param {Color} $color - color to shade
/// @param {Number} $percentage - percentage of `$color` in returned color
/// @return {Color}
@function shade($color, $percentage) {
    @return mix(black, $color, $percentage);
}
